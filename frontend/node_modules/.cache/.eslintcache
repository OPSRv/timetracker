[{"/Users/ops/PROG/project/timetracker/frontend/src/index.jsx":"1","/Users/ops/PROG/project/timetracker/frontend/src/Reducers/store.jsx":"2","/Users/ops/PROG/project/timetracker/frontend/src/Components/App/App.jsx":"3","/Users/ops/PROG/project/timetracker/frontend/src/Reducers/RootReducer.jsx":"4","/Users/ops/PROG/project/timetracker/frontend/src/Components/HOC/RequireAuth.jsx":"5","/Users/ops/PROG/project/timetracker/frontend/src/Components/Users/Users.jsx":"6","/Users/ops/PROG/project/timetracker/frontend/src/Components/Dashboard/Dashboard.jsx":"7","/Users/ops/PROG/project/timetracker/frontend/src/Components/Task/Task.jsx":"8","/Users/ops/PROG/project/timetracker/frontend/src/Components/Auth/Login.jsx":"9","/Users/ops/PROG/project/timetracker/frontend/src/Components/Task/TimeLog.jsx":"10","/Users/ops/PROG/project/timetracker/frontend/src/Components/Users/UserId.jsx":"11","/Users/ops/PROG/project/timetracker/frontend/src/Components/Projects/Projects.jsx":"12","/Users/ops/PROG/project/timetracker/frontend/src/Components/Auth/Signup.jsx":"13","/Users/ops/PROG/project/timetracker/frontend/src/Components/Task/TaskCreate.jsx":"14","/Users/ops/PROG/project/timetracker/frontend/src/Components/NoMatch/NoMatch.jsx":"15","/Users/ops/PROG/project/timetracker/frontend/src/Components/Projects/ProjectId.jsx":"16","/Users/ops/PROG/project/timetracker/frontend/src/Components/Projects/ProjectCreate.jsx":"17","/Users/ops/PROG/project/timetracker/frontend/src/Components/Sidebar/Sidebar.jsx":"18","/Users/ops/PROG/project/timetracker/frontend/src/Reducers/TimeTrackerReducer.jsx":"19","/Users/ops/PROG/project/timetracker/frontend/src/Reducers/LoadingReducer.jsx":"20","/Users/ops/PROG/project/timetracker/frontend/src/Components/Auth/NoAuth.jsx":"21","/Users/ops/PROG/project/timetracker/frontend/src/Components/Task/Comments.jsx":"22","/Users/ops/PROG/project/timetracker/frontend/src/Components/Projects/ProjectPerformers.jsx":"23","/Users/ops/PROG/project/timetracker/frontend/src/Actions/TimeTrackerActions.jsx":"24","/Users/ops/PROG/project/timetracker/frontend/src/Components/Loading/Loading.jsx":"25","/Users/ops/PROG/project/timetracker/frontend/src/Services/Date.jsx":"26","/Users/ops/PROG/project/timetracker/frontend/src/Services/ApiService.jsx":"27","/Users/ops/PROG/project/timetracker/frontend/src/Services/serviceFunction.jsx":"28","/Users/ops/PROG/project/timetracker/frontend/src/Components/Header/Header.jsx":"29","/Users/ops/PROG/project/timetracker/frontend/src/Reducers/Types.jsx":"30","/Users/ops/PROG/project/timetracker/frontend/src/Services/http-common.jsx":"31","/Users/ops/PROG/project/timetracker/frontend/src/Components/Loading/LoadingSmall.jsx":"32","/Users/ops/PROG/project/timetracker/frontend/src/Services/api/index.js":"33","/Users/ops/PROG/project/timetracker/frontend/src/Services/api/endpoints/auth.js":"34","/Users/ops/PROG/project/timetracker/frontend/src/Services/api/axios/index.js":"35","/Users/ops/PROG/project/timetracker/frontend/src/Components/Auth/WelcomePage.jsx":"36","/Users/ops/PROG/project/timetracker/frontend/src/Components/Task/TimeSpent.jsx":"37","/Users/ops/PROG/project/timetracker/frontend/src/Components/Projects/ProjectDelete.jsx":"38","/Users/ops/PROG/project/timetracker/frontend/src/Services/api/endpoints/project.js":"39","/Users/ops/PROG/project/timetracker/frontend/src/Components/Task/TaskDelete.jsx":"40","/Users/ops/PROG/project/timetracker/frontend/src/Services/api/endpoints/task.js":"41"},{"size":470,"mtime":1640446033978,"results":"42","hashOfConfig":"43"},{"size":395,"mtime":1640302630067,"results":"44","hashOfConfig":"43"},{"size":2153,"mtime":1640481354881,"results":"45","hashOfConfig":"43"},{"size":244,"mtime":1639178155728,"results":"46","hashOfConfig":"43"},{"size":438,"mtime":1640526565733,"results":"47","hashOfConfig":"43"},{"size":1302,"mtime":1640486306262,"results":"48","hashOfConfig":"43"},{"size":238,"mtime":1640303461187,"results":"49","hashOfConfig":"43"},{"size":9189,"mtime":1640544755541,"results":"50","hashOfConfig":"43"},{"size":2076,"mtime":1640481145078,"results":"51","hashOfConfig":"43"},{"size":3181,"mtime":1640484104664,"results":"52","hashOfConfig":"43"},{"size":886,"mtime":1640445956916,"results":"53","hashOfConfig":"43"},{"size":2100,"mtime":1640536103324,"results":"54","hashOfConfig":"43"},{"size":2693,"mtime":1640445977437,"results":"55","hashOfConfig":"43"},{"size":4130,"mtime":1640518437331,"results":"56","hashOfConfig":"43"},{"size":293,"mtime":1640302311591,"results":"57","hashOfConfig":"43"},{"size":3125,"mtime":1640527103347,"results":"58","hashOfConfig":"43"},{"size":3414,"mtime":1640518186055,"results":"59","hashOfConfig":"43"},{"size":1171,"mtime":1640303338366,"results":"60","hashOfConfig":"43"},{"size":3234,"mtime":1640545950483,"results":"61","hashOfConfig":"43"},{"size":452,"mtime":1639180105842,"results":"62","hashOfConfig":"43"},{"size":347,"mtime":1640301925443,"results":"63","hashOfConfig":"43"},{"size":2496,"mtime":1640445977428,"results":"64","hashOfConfig":"43"},{"size":345,"mtime":1640306924312,"results":"65","hashOfConfig":"43"},{"size":5867,"mtime":1640545888843,"results":"66","hashOfConfig":"43"},{"size":364,"mtime":1640303203120,"results":"67","hashOfConfig":"43"},{"size":2079,"mtime":1640131867694,"results":"68","hashOfConfig":"43"},{"size":1121,"mtime":1640259864159,"results":"69","hashOfConfig":"43"},{"size":270,"mtime":1640130254852,"results":"70","hashOfConfig":"43"},{"size":1526,"mtime":1640475360208,"results":"71","hashOfConfig":"43"},{"size":817,"mtime":1640539060767,"results":"72","hashOfConfig":"43"},{"size":329,"mtime":1640487567983,"results":"73","hashOfConfig":"43"},{"size":153,"mtime":1640303435038,"results":"74","hashOfConfig":"43"},{"size":200,"mtime":1640540184566,"results":"75","hashOfConfig":"43"},{"size":262,"mtime":1640391533763,"results":"76","hashOfConfig":"43"},{"size":448,"mtime":1640398859873,"results":"77","hashOfConfig":"43"},{"size":463,"mtime":1640545519009,"results":"78","hashOfConfig":"43"},{"size":555,"mtime":1640485197293,"results":"79","hashOfConfig":"43"},{"size":641,"mtime":1640526829165,"results":"80","hashOfConfig":"43"},{"size":150,"mtime":1640526254049,"results":"81","hashOfConfig":"43"},{"size":612,"mtime":1640540532855,"results":"82","hashOfConfig":"43"},{"size":146,"mtime":1640540414750,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"6pewdz",{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/Users/ops/PROG/project/timetracker/frontend/src/index.jsx",[],["176","177"],"/Users/ops/PROG/project/timetracker/frontend/src/Reducers/store.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/App/App.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Reducers/RootReducer.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/HOC/RequireAuth.jsx",["178"],"import { useLocation, Navigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst RequireAuth = ({ children }) => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const { isAuthenticated } = useSelector((state) => state.timetracker);\n\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" state={{ from: location }} />;\n  }\n  return children;\n};\nexport { RequireAuth };\n","/Users/ops/PROG/project/timetracker/frontend/src/Components/Users/Users.jsx",["179"],"import { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../../assets/css/users.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsersList } from \"../../Actions/TimeTrackerActions\";\nimport { useNavigate } from \"react-router-dom\";\nimport { NoAuth } from \"../Auth/NoAuth\";\n\nconst Users = () => {\n  const dispatch = useDispatch();\n  const userList = useSelector((state) => state.timetracker.UserList);\n\n  useEffect(() => {\n    dispatch(getUsersList());\n  }, [dispatch]);\n\n  const { isAuthenticated } = useSelector((state) => state.timetracker);\n  console.log(userList);\n  return (\n    <>\n      <div className=\"users \">\n        {isAuthenticated && !!userList ? (\n          userList.map((item) => (\n            <Link to={`users/${item.username}`} key={item.id}>\n              <div className=\"user-card\">\n                <img\n                  className=\"user-picture\"\n                  src={item.user_picture}\n                  alt=\"userpicture\"\n                />\n                <p className=\"users-username-text\">{item.username}</p>\n                <span>-</span>\n                <p>{item.position}</p>\n              </div>\n            </Link>\n          ))\n        ) : (\n          <NoAuth />\n        )}\n      </div>\n    </>\n  );\n};\nexport { Users };\n","/Users/ops/PROG/project/timetracker/frontend/src/Components/Dashboard/Dashboard.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Task/Task.jsx",["180"],"import { editTask, getTask } from \"../../Actions/TimeTrackerActions\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Loading } from \"../Loading/Loading\";\nimport { dateNow } from \"../../Services/Date\";\nimport { Comments } from \"./Comments\";\nimport { TimeLog } from \"./TimeLog\";\nimport { TimeSpent } from \"./TimeSpent\";\nimport \"../../assets/css/task.scss\";\nimport { BiEdit, BiArrowBack } from \"react-icons/bi\";\nimport { clean } from \"../../Services/serviceFunction\";\nimport { TaskDelete } from \"./TaskDelete\";\nconst Task = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [isReadOnly, setIsReadOnly] = useState({ readOnly: true });\n\n  const task = useSelector((state) => state.timetracker.CurrentTask);\n\n  const { id, performers } = useSelector(\n    (state) => state.timetracker.ProjectId\n  );\n\n  const { performer } = useSelector((state) => state.timetracker.CurrentTask);\n\n  const { theme } = useParams();\n  const currentUser = useSelector((state) => state.timetracker.CurrentUser.id);\n  const isloading = useSelector((state) => state.loading.isLoading);\n  const [themeTask, setThemeTask] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [date_start, setDateStart] = useState(\"\");\n  const [date_end, setDateEnd] = useState(\"\");\n  const [task_type, setTaskType] = useState(\"\");\n  const [task_priority, setTaskPriority] = useState(\"\");\n  const [estimated_time, setEstimatedTime] = useState(\"\");\n  const [editPerformer, setPerformer] = useState(\"\");\n\n  const onSendDataUs = (event) => {\n    event.preventDefault();\n\n    let taskEditData = {\n      theme: themeTask,\n      description: description,\n      date_start: date_start,\n      date_end: date_end,\n      task_type: task_type,\n      task_priority: task_priority,\n      estimated_time: estimated_time,\n      performer: editPerformer,\n      author: currentUser,\n      project: id,\n    };\n    //function delete null undefined empty\n    clean(taskEditData);\n    dispatch(editTask(theme, taskEditData));\n    navigate(-1);\n  };\n\n  useEffect(() => {\n    dispatch(getTask(theme));\n  }, [dispatch, theme]);\n\n  // const dateStart = dateNow(new Date(task.date_start));\n\n  // const dateEnd = dateNow(new Date(task.date_end));\n\n  const edit = () => {\n    setIsReadOnly((prevState) => ({ readOnly: !prevState.readOnly }));\n  };\n\n  let taskPriorityStyle = \"normal\";\n  switch (task && task.length !== 0 ? task.task_priority : taskPriorityStyle) {\n    case \"normal\":\n      taskPriorityStyle = \"task-normal\";\n      break;\n    case \"high\":\n      taskPriorityStyle = \"task-high\";\n      break;\n    case \"urgent\":\n      taskPriorityStyle = \"task-urgent\";\n      break;\n    default:\n      break;\n  }\n  return (\n    <>\n      {!isloading ? (\n        <div className={`${task ? taskPriorityStyle : \"\"} task-edit-wrapper`}>\n          <div className=\"task-header\">\n            <h1 className={!isReadOnly.readOnly ? \"blink\" : \"\"}>\n              Task{\" \"}\n              <BiEdit\n                onClick={() => edit()}\n                className={!isReadOnly.readOnly ? \"svg-edit\" : \"''\"}\n              />\n              <TaskDelete task={task} />\n            </h1>\n\n            <TimeSpent task={task} />\n            <div>\n              <BiArrowBack onClick={() => navigate(-1)} />\n            </div>\n          </div>\n\n          <div className=\"task-content-wrapper\">\n            <form\n              className=\"form-task-edit comments-wrapper\"\n              onSubmit={onSendDataUs}\n            >\n              <div className=\"select\">\n                <label for=\"theme\">Theme:</label>\n                <input\n                  onChange={(event) => setThemeTask(event.target.value)}\n                  className={!isReadOnly.readOnly ? \"input-effect\" : \"''\"}\n                  readOnly={isReadOnly.readOnly}\n                  id=\"theme\"\n                  type=\"text\"\n                  defaultValue={task.theme}\n                  name=\"theme\"\n                  required\n                />\n              </div>\n              <div className=\"select\">\n                <label for=\"description\">Description:</label>\n                <textarea\n                  onChange={(event) => setDescription(event.target.value)}\n                  className={!isReadOnly.readOnly ? \"input-effect\" : \"''\"}\n                  readOnly={isReadOnly.readOnly}\n                  type=\"textarea\"\n                  id=\"description\"\n                  name=\"description\"\n                  defaultValue={task.description}\n                  required\n                />\n              </div>\n              <div className=\"select\">\n                <label for=\"date_start\">Date start:</label>\n\n                <p className={!isReadOnly.readOnly ? \"none\" : \"date\"}>\n                  {task.date_start}\n                </p>\n                <input\n                  onChange={(event) => setDateStart(event.target.value)}\n                  className={\n                    isReadOnly.readOnly ? \"none\" : \"date, input-effect\"\n                  }\n                  readOnly={isReadOnly.readOnly}\n                  id=\"date_start\"\n                  type=\"datetime-local\"\n                  name=\"date_start\"\n                  required\n                />\n              </div>\n              <div className=\"select\">\n                <label for=\"date_end\">Date end:</label>\n                <p className={!isReadOnly.readOnly ? \"none\" : \"date\"}>\n                  {task.date_end}\n                </p>\n                <input\n                  onChange={(event) => setDateEnd(event.target.value)}\n                  className={\n                    isReadOnly.readOnly ? \"none\" : \"date, input-effect\"\n                  }\n                  readOnly={isReadOnly.readOnly}\n                  id=\"date_end\"\n                  type=\"datetime-local\"\n                  name=\"date_end\"\n                  required\n                />\n              </div>\n              <div className=\"select\">\n                <label for=\"standard-select\">Task type:</label>\n                <select\n                  disabled={isReadOnly.readOnly}\n                  id=\"standard-select\"\n                  required\n                  defaultValue={task.task_type}\n                  onChange={(event) => setTaskType(event.target.value)}\n                >\n                  <option value=\"feature\">feature</option>\n                  <option value=\"bug\">bug</option>\n                </select>\n              </div>\n              <div className=\"select\">\n                <label for=\"standard-select-1\">Task priority:</label>\n                <select\n                  disabled={isReadOnly.readOnly}\n                  id=\"standard-select-1\"\n                  required\n                  defaultValue={task.task_priority}\n                  onChange={(event) => setTaskPriority(event.target.value)}\n                >\n                  <option value=\"normal\">normal</option>\n                  <option value=\"high\">high</option>\n                  <option value=\"urgent\">urgent</option>\n                </select>\n              </div>\n              <div className=\"select\">\n                <label for=\"standard-select-1\">Performer:</label>\n                <p className={!isReadOnly.readOnly ? \"none\" : \"date\"}>\n                  {performer && performer.username.length !== 0\n                    ? performer.username\n                    : \"\"}\n                </p>\n                <select\n                  className={\n                    isReadOnly.readOnly ? \"none\" : \"date, input-effect\"\n                  }\n                  disabled={isReadOnly.readOnly}\n                  id=\"standard-select\"\n                  required\n                  onChange={(event) => setPerformer(event.target.value)}\n                >\n                  {performers.map((user) => {\n                    return (\n                      <option value={user.id} key={user.id}>\n                        {user.username}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n              <div className=\"select\">\n                <label for=\"standard-select\">Estimated time:</label>\n                <input\n                  readOnly={isReadOnly.readOnly}\n                  onChange={(event) => setEstimatedTime(event.target.value)}\n                  className={!isReadOnly.readOnly ? \"input-effect\" : \"''\"}\n                  type=\"number\"\n                  defaultValue={1}\n                  name=\"estimated_time\"\n                  min=\"0\"\n                  required\n                />\n              </div>\n              <button\n                onClick={() => edit()}\n                className={isReadOnly.readOnly ? \"none\" : \"btn-edit\"}\n                type=\"submit\"\n              >\n                Save edit\n              </button>\n            </form>\n\n            <div className=\"comments-wrapper comments\">\n              <Comments />\n            </div>\n          </div>\n          <div className=\"comments-wrapper\">\n            <TimeLog />\n          </div>\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n};\n\nexport { Task };\n","/Users/ops/PROG/project/timetracker/frontend/src/Components/Auth/Login.jsx",["181"],"import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cookies from \"js-cookie\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { getAuth, getUser } from \"../../Actions/TimeTrackerActions\";\nimport \"../../assets/css/login.scss\";\nimport { WelcomePage } from \"./WelcomePage\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const fromPage = location.state?.from?.pathname || \"/\";\n  const currentUser = useSelector((state) => state.timetracker.CurrentUser);\n  const { username } = currentUser;\n\n  const [usernameInput, setUsernameInput] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n    let newAuth = {\n      username: usernameInput,\n      password: passwordInput,\n    };\n    setUsernameInput(\"\");\n    setPasswordInput(\"\");\n    dispatch(getAuth(newAuth));\n    navigate(fromPage, { replace: true });\n  };\n\n  useEffect(() => {\n    const auth_token = Cookies.get(\"auth_token\");\n    if (auth_token) {\n      dispatch(getUser());\n    }\n  }, []);\n\n  if (username && username.length !== 0) {\n    return <WelcomePage />;\n  }\n\n  return (\n    <>\n      <div className=\"container-login\">\n        <div className=\"form-box\">\n          <form className=\"login-container\" onSubmit={handleLogin}>\n            <input\n              onChange={(event) => setUsernameInput(event.target.value)}\n              type=\"text\"\n              placeholder=\"Name\"\n              autoComplete=\"username\"\n              name=\"username\"\n              required\n            />\n            <input\n              onChange={(event) => setPasswordInput(event.target.value)}\n              type=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"current-password\"\n            />\n            <button className=\"btn-save\" type=\"submit\">\n              Log in\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport { Login };\n","/Users/ops/PROG/project/timetracker/frontend/src/Components/Task/TimeLog.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Users/UserId.jsx",["182"],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { getUserId } from \"../../Actions/TimeTrackerActions\";\n\nconst UserId = () => {\n  const dispatch = useDispatch();\n  const url = useLocation();\n\n  const userId = useSelector((state) => state.timetracker.UserId);\n\n  useEffect(() => {\n    dispatch(getUserId(url.pathname));\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"userId gd\">\n        <img\n          className=\"user-picture\"\n          src={userId.user_picture}\n          alt=\"userpicture\"\n        />\n        <p>{userId.username}</p>\n        <p>{userId.position}</p>\n        <p>{userId.email}</p>\n        <p>{userId.birth_date}</p>\n        <Link to=\"/\">\n          <button className=\"btn-blue\">Back</button>\n        </Link>\n      </div>\n    </>\n  );\n};\nexport { UserId };\n","/Users/ops/PROG/project/timetracker/frontend/src/Components/Projects/Projects.jsx",["183"],"import { Link } from \"react-router-dom\";\nimport { useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GiUnstableProjectile } from \"react-icons/gi\";\nimport { FaPlusSquare } from \"react-icons/fa\";\nimport { MdSentimentDissatisfied } from \"react-icons/md\";\nimport \"../../assets/css/projects.scss\";\nimport { Loading } from \"../Loading/Loading\";\nimport { getProjects } from \"../../Actions/TimeTrackerActions\";\n\nconst Projects = () => {\n  const dispatch = useDispatch();\n  const projectList = useSelector((state) => state.timetracker.ProjectList);\n  const isloading = useSelector((state) => state.loading.isLoading);\n\n  const { is_superuser } = useSelector(\n    (state) => state.timetracker.CurrentUser\n  );\n\n  const getProjectsCall = useCallback(\n    () => dispatch(getProjects()),\n    [dispatch]\n  );\n\n  useEffect(() => {\n    getProjectsCall();\n  }, [dispatch]);\n  return (\n    <>\n      {isloading ? (\n        <Loading />\n      ) : (\n        <div className=\"projects-container\">\n          <div className=\"projects-wrapper\">\n            {!!projectList && projectList && projectList.length !== 0 ? (\n              projectList.map((item) => {\n                return (\n                  <Link to={`${item.name}`} key={item.id}>\n                    <div className=\"project-card\">\n                      <GiUnstableProjectile />\n                      <p className=\"project-name\">{item.name}</p>\n                    </div>\n                  </Link>\n                );\n              })\n            ) : (\n              <span className=\"no-project\">\n                You are not assigned to any of the projects ...\n                <MdSentimentDissatisfied />\n              </span>\n            )}\n          </div>\n          {is_superuser && !!is_superuser ? (\n            <Link to=\"/project-create\">\n              <button className=\"btn-blue\">\n                <FaPlusSquare />\n                New project\n              </button>\n            </Link>\n          ) : (\n            <span></span>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport { Projects };\n","/Users/ops/PROG/project/timetracker/frontend/src/Components/Auth/Signup.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Task/TaskCreate.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/NoMatch/NoMatch.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Projects/ProjectId.jsx",["184","185"],"import { useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { GiUnstableProjectile, GiBoltBomb } from \"react-icons/gi\";\nimport { ProjectPerformers } from \"./ProjectPerformers\";\nimport { Loading } from \"../Loading/Loading\";\nimport { getProjectId } from \"../../Actions/TimeTrackerActions\";\nimport { ProjectDelete } from \"./ProjectDelete\";\n\nconst ProjectId = () => {\n  const dispatch = useDispatch();\n\n  const projectId = useSelector((state) => state.timetracker.ProjectId);\n  const url = useLocation();\n\n  const { is_superuser } = useSelector(\n    (state) => state.timetracker.CurrentUser\n  );\n\n  const getProjectIdCall = useCallback(\n    () => dispatch(getProjectId(url.pathname)),\n    [dispatch]\n  );\n\n  useEffect(() => {\n    getProjectIdCall();\n  }, [dispatch]);\n\n  const isloading = useSelector((state) => state.loading.isLoading);\n  return (\n    <>\n      {isloading ? (\n        <Loading />\n      ) : (\n        <div className=\"project\">\n          <div className=\"projectId-title\">\n            <h1>\n              <GiUnstableProjectile /> {projectId.name}\n            </h1>\n            {is_superuser && !!is_superuser ? (\n              <ProjectDelete projectId={projectId} />\n            ) : (\n              <span></span>\n            )}\n          </div>\n\n          <p className=\"project-description\">{projectId.description}</p>\n          <div className=\"project-performers\">\n            <div className=\"project-item\">\n              <h3>Performers:</h3>\n              {projectId && projectId.performers.length !== 0 ? (\n                projectId.performers.map((item) => {\n                  return (\n                    <Link to={`/users/${item.username}`} key={item.id}>\n                      <ProjectPerformers\n                        user_picture={item.user_picture}\n                        username={item.username}\n                        position={item.position}\n                      />\n                    </Link>\n                  );\n                })\n              ) : (\n                <span></span>\n              )}\n            </div>\n            <div className=\"project-item\">\n              <h3>Task</h3>\n              {projectId && projectId.tasks.length !== 0 ? (\n                projectId.tasks.map((item) => {\n                  return (\n                    <Link to={`/task/${item.theme}`} key={item.id}>\n                      <div className=\"user-performers\">\n                        <GiBoltBomb />\n                        <p>{item.theme}</p>\n                      </div>\n                    </Link>\n                  );\n                })\n              ) : (\n                <span>no tasks</span>\n              )}\n            </div>\n          </div>\n          <div className=\"btn-container\">\n            <Link to=\"/projects\">\n              <button className=\"btn-blue\">Back</button>\n            </Link>\n            <Link to=\"task-create\">\n              <button className=\"btn-blue\">Create task</button>\n            </Link>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\nexport { ProjectId };\n","/Users/ops/PROG/project/timetracker/frontend/src/Components/Projects/ProjectCreate.jsx",["186","187"],"import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { createProject, getUsersList } from \"../../Actions/TimeTrackerActions\";\nimport { Loading } from \"../Loading/Loading\";\n\nconst ProjectCreate = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const userList = useSelector((state) => state.timetracker.UserList);\n  const isloading = useSelector((state) => state.loading.isLoading);\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [performers, setPerformers] = useState(\n    userList.length !== 0 ? userList : []\n  );\n\n  useEffect(() => {\n    dispatch(getUsersList());\n  }, [dispatch]);\n\n  if (isloading) {\n    return <Loading />;\n  }\n\n  const checkedItems = performers.filter(({ checked }) => checked);\n\n  const onSendDataUs = (event) => {\n    event.preventDefault();\n\n    const getPerformersId = [];\n\n    const getPerformers = checkedItems.map((obj) => {\n      getPerformersId.push(obj.id);\n    });\n\n    let project_data = {\n      name: name,\n      description: description,\n      performers: getPerformersId,\n    };\n    dispatch(createProject(project_data));\n    setPerformers([]);\n    navigate(\"/projects\");\n  };\n\n  const newCheckboxes = [...userList];\n  return (\n    <div className=\"project-create\">\n      <form className=\"login-container\" onSubmit={onSendDataUs}>\n        <input\n          onChange={(event) => setName(event.target.value)}\n          type=\"text\"\n          placeholder=\"Name project\"\n          autoComplete=\"name\"\n          name=\"name\"\n          required\n        />\n        <input\n          onChange={(event) => setDescription(event.target.value)}\n          type=\"text\"\n          placeholder=\"Description\"\n          name=\"description\"\n          required\n        />\n        <div className=\"user-checkbox-wrapper\">\n          {userList.length !== 0 ? (\n            userList.map((checkbox, index) => (\n              <div className=\"user-checkbox\" key={checkbox.id}>\n                <input\n                  type={\"checkbox\"}\n                  onChange={(e) => {\n                    newCheckboxes[index].checked = e.target.checked;\n                    setPerformers(newCheckboxes);\n                  }}\n                  checked={checkbox.checked}\n                  id={checkbox.id}\n                  className=\"styled-checkbox\"\n                />\n                <label htmlFor={checkbox.id}>\n                  {\" \"}\n                  <img\n                    className=\"user-picture-small\"\n                    src={checkbox.user_picture}\n                    alt=\"userpicture\"\n                  />\n                  <p>{checkbox.username}</p>\n                </label>\n              </div>\n            ))\n          ) : (\n            <Loading />\n          )}\n        </div>\n        <div className=\"user-checkbox-added\">\n          <h3>Add users in project:</h3>\n          {checkedItems.isLoading !== 0 ? (\n            checkedItems.map((checkbox, index) => (\n              <div key={checkbox.id}>\n                <p className=\"add-user\">{checkbox.username}</p>\n              </div>\n            ))\n          ) : (\n            <Loading />\n          )}\n        </div>\n        <button className=\"btn-save\" type=\"submit\">\n          Create project\n        </button>\n      </form>\n    </div>\n  );\n};\nexport { ProjectCreate };\n","/Users/ops/PROG/project/timetracker/frontend/src/Components/Sidebar/Sidebar.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Reducers/TimeTrackerReducer.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Reducers/LoadingReducer.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Auth/NoAuth.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Task/Comments.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Projects/ProjectPerformers.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Actions/TimeTrackerActions.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Loading/Loading.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Services/Date.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Services/ApiService.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Services/serviceFunction.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Header/Header.jsx",["188","189"],"import { NavLink, useNavigate } from \"react-router-dom\";\nimport \"../../assets/css/header.scss\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cookies from \"js-cookie\";\nimport { CgLogOut } from \"react-icons/cg\";\nimport { LoadingSmall } from \"../Loading/LoadingSmall\";\nimport { outLogin } from \"../../Actions/TimeTrackerActions\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { isAuthenticated } = useSelector((state) => state.timetracker);\n  const currentUser = useSelector((state) => state.timetracker.CurrentUser);\n\n  const isLogOut = () => {\n    dispatch(outLogin());\n    navigate(\"/login\");\n  };\n\n  return (\n    <>\n      {isAuthenticated && currentUser && currentUser.username ? (\n        currentUser && currentUser.username ? (\n          <div className=\"header-wrapper\">\n            <img\n              className=\"header-userpicture\"\n              src={currentUser.user_picture}\n              alt=\"user_picture\"\n            />\n            <p className=\"header-text-name\">{currentUser.username}</p>\n            <CgLogOut onClick={() => isLogOut()} />\n          </div>\n        ) : (\n          <div className=\"header-wrapper\">\n            <LoadingSmall />\n          </div>\n        )\n      ) : (\n        <div className=\"header-wrapper\">\n          <NavLink to=\"login\">Log in</NavLink>\n          <span> & </span>\n          <NavLink to=\"signup\">Sign up</NavLink>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport { Header };\n","/Users/ops/PROG/project/timetracker/frontend/src/Reducers/Types.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Services/http-common.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Loading/LoadingSmall.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Services/api/index.js",[],"/Users/ops/PROG/project/timetracker/frontend/src/Services/api/endpoints/auth.js",[],"/Users/ops/PROG/project/timetracker/frontend/src/Services/api/axios/index.js",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Auth/WelcomePage.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Task/TimeSpent.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Projects/ProjectDelete.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Services/api/endpoints/project.js",[],"/Users/ops/PROG/project/timetracker/frontend/src/Components/Task/TaskDelete.jsx",[],"/Users/ops/PROG/project/timetracker/frontend/src/Services/api/endpoints/task.js",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":6,"column":9,"nodeType":"196","messageId":"197","endLine":6,"endColumn":17},{"ruleId":"194","severity":1,"message":"198","line":7,"column":10,"nodeType":"196","messageId":"197","endLine":7,"endColumn":21},{"ruleId":"194","severity":1,"message":"199","line":6,"column":10,"nodeType":"196","messageId":"197","endLine":6,"endColumn":17},{"ruleId":"200","severity":1,"message":"201","line":37,"column":6,"nodeType":"202","endLine":37,"endColumn":8,"suggestions":"203"},{"ruleId":"200","severity":1,"message":"204","line":14,"column":6,"nodeType":"202","endLine":14,"endColumn":16,"suggestions":"205"},{"ruleId":"200","severity":1,"message":"206","line":27,"column":6,"nodeType":"202","endLine":27,"endColumn":16,"suggestions":"207"},{"ruleId":"200","severity":1,"message":"208","line":22,"column":5,"nodeType":"202","endLine":22,"endColumn":15,"suggestions":"209"},{"ruleId":"200","severity":1,"message":"210","line":27,"column":6,"nodeType":"202","endLine":27,"endColumn":16,"suggestions":"211"},{"ruleId":"194","severity":1,"message":"212","line":35,"column":11,"nodeType":"196","messageId":"197","endLine":35,"endColumn":24},{"ruleId":"213","severity":1,"message":"214","line":35,"column":50,"nodeType":"215","messageId":"216","endLine":35,"endColumn":52},{"ruleId":"194","severity":1,"message":"217","line":3,"column":10,"nodeType":"196","messageId":"197","endLine":3,"endColumn":19},{"ruleId":"194","severity":1,"message":"218","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":15},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'dateNow' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["221"],"React Hook useEffect has a missing dependency: 'url.pathname'. Either include it or remove the dependency array.",["222"],"React Hook useEffect has a missing dependency: 'getProjectsCall'. Either include it or remove the dependency array.",["223"],"React Hook useCallback has a missing dependency: 'url.pathname'. Either include it or remove the dependency array.",["224"],"React Hook useEffect has a missing dependency: 'getProjectIdCall'. Either include it or remove the dependency array.",["225"],"'getPerformers' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'Cookies' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"228","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [dispatch]",{"range":"235","text":"236"},"Update the dependencies array to be: [dispatch, url.pathname]",{"range":"237","text":"238"},"Update the dependencies array to be: [dispatch, getProjectsCall]",{"range":"239","text":"240"},{"range":"241","text":"238"},"Update the dependencies array to be: [dispatch, getProjectIdCall]",{"range":"242","text":"243"},[1176,1178],"[dispatch]",[427,437],"[dispatch, url.pathname]",[897,907],"[dispatch, getProjectsCall]",[790,800],[856,866],"[dispatch, getProjectIdCall]"]